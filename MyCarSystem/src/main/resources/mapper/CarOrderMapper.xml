<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fc.mapper.CarOrderMapper">
    <cache/>
    <resultMap id="BaseResultMap" type="com.fc.entity.CarOrder">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="cid" jdbcType="INTEGER" property="cid"/>
        <result column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="getid" jdbcType="INTEGER" property="getid"/>
        <result column="backid" jdbcType="INTEGER" property="backid"/>
        <result column="oprice" jdbcType="DOUBLE" property="oprice"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="type" jdbcType="VARCHAR" property="carType"/>
        <result column="getcity" jdbcType="VARCHAR" property="getcity"/>
        <result column="backcity" jdbcType="VARCHAR" property="backcity"/>
    </resultMap>

    <resultMap id="afterVOMap" type="com.fc.vo.OrderVO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="cid" jdbcType="INTEGER" property="cid"/>
        <result column="email" jdbcType="VARCHAR" property="uemail"/>
        <result column="oprice" jdbcType="DOUBLE" property="oprice"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="type" jdbcType="VARCHAR" property="carType"/>
        <result column="getcity" jdbcType="VARCHAR" property="getcity"/>
        <result column="backcity" jdbcType="VARCHAR" property="backcity"/>
        <result column="picture" jdbcType="VARCHAR" property="picture"/>
    </resultMap>

    <select id="findAll" resultMap="BaseResultMap">
        select o.id, o.oprice, car.type, city.name getcity, cty.name backcity, o.status
        from car_order o
                 inner join car_car car
                            on o.cid = car.id
                 inner join car_city city
                            on o.getid = city.id
                 inner join car_city cty
                            on o.backid = cty.id
    </select>

    <select id="afterAll" resultMap="afterVOMap">
        select o.id,
               u.email,
               c.type,
               c.picture,
               o.status,
               o.oprice,
               city.name as getcity,
               cty.name  as backcity
        from car_order o
                 inner join car_user u
                            on o.uid = u.id
                 inner join car_car c
                            on o.cid = c.id
                 inner join car_city city
                            on o.getid = city.id
                 inner join car_city cty
                            on o.backid = cty.id
    </select>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, cid, uid, getid, backid, oprice, status
    </sql>
    <select id="selectByExample" parameterType="com.fc.entity.CarOrderExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from car_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from car_order
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from car_order
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.fc.entity.CarOrderExample">
        delete from car_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.fc.entity.CarOrder">
        insert into car_order (id, cid, uid,
                               getid, backid, oprice,
                               status)
        values (#{id,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER},
                #{getid,jdbcType=INTEGER}, #{backid,jdbcType=INTEGER}, #{oprice,jdbcType=DOUBLE},
                #{status,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.fc.entity.CarOrder">
        insert into car_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="cid != null">
                cid,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="getid != null">
                getid,
            </if>
            <if test="backid != null">
                backid,
            </if>
            <if test="oprice != null">
                oprice,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="cid != null">
                #{cid,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="getid != null">
                #{getid,jdbcType=INTEGER},
            </if>
            <if test="backid != null">
                #{backid,jdbcType=INTEGER},
            </if>
            <if test="oprice != null">
                #{oprice,jdbcType=DOUBLE},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.fc.entity.CarOrderExample" resultType="java.lang.Long">
        select count(*) from car_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update car_order
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.cid != null">
                cid = #{record.cid,jdbcType=INTEGER},
            </if>
            <if test="record.uid != null">
                uid = #{record.uid,jdbcType=INTEGER},
            </if>
            <if test="record.getid != null">
                getid = #{record.getid,jdbcType=INTEGER},
            </if>
            <if test="record.backid != null">
                backid = #{record.backid,jdbcType=INTEGER},
            </if>
            <if test="record.oprice != null">
                oprice = #{record.oprice,jdbcType=DOUBLE},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update car_order
        set id = #{record.id,jdbcType=INTEGER},
        cid = #{record.cid,jdbcType=INTEGER},
        uid = #{record.uid,jdbcType=INTEGER},
        getid = #{record.getid,jdbcType=INTEGER},
        backid = #{record.backid,jdbcType=INTEGER},
        oprice = #{record.oprice,jdbcType=DOUBLE},
        status = #{record.status,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.fc.entity.CarOrder">
        update car_order
        <set>
            <if test="cid != null">
                cid = #{cid,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
            <if test="getid != null">
                getid = #{getid,jdbcType=INTEGER},
            </if>
            <if test="backid != null">
                backid = #{backid,jdbcType=INTEGER},
            </if>
            <if test="oprice != null">
                oprice = #{oprice,jdbcType=DOUBLE},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fc.entity.CarOrder">
        update car_order
        set cid    = #{cid,jdbcType=INTEGER},
            uid    = #{uid,jdbcType=INTEGER},
            getid  = #{getid,jdbcType=INTEGER},
            backid = #{backid,jdbcType=INTEGER},
            oprice = #{oprice,jdbcType=DOUBLE},
            status = #{status,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>